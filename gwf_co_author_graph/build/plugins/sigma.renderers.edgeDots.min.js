!function(){"use strict";function C(o,t,e,r,a,i,l,n,s){o.beginPath(),o.fillStyle=s;l=function(o,t,e,r,a,i,l){for(var n=0,s=1e3,u=0;u<1;u+=.001){var c=d(o,t,e,r,a,i,u),c=function(o,t,e,r){return Math.sqrt((e-o)*(e-o)+(r-t)*(r-t))}(o,t,c.x,c.y);Math.abs(c-l)<s&&(s=Math.abs(c-l),n=u)}return d(o,t,e,r,a,i,n)}(t,e,r.x,r.y,a,i,l);o.arc(l.x,l.y,3*n,0,2*Math.PI,!1),o.fill()}function n(o,t,e,r){var a=1-o;return a*a*t+2*a*o*e+o*o*r}function d(o,t,e,r,a,i,l){return{x:n(l,o,e,a),y:n(l,t,r,i)}}sigma.utils.pkg("sigma.canvas.edges"),sigma.canvas.edges.dotCurve=function(o,t,e,r,a){var i=o.color,l=a("prefix")||"",n=o[l+"size"]||1,s=a("edgeColor"),u=a("defaultNodeColor"),c=a("defaultEdgeColor"),d=t[l+"size"],f=t[l+"x"],g=t[l+"y"],y=e[l+"x"],a=e[l+"y"],x=t.id===e.id?sigma.utils.getSelfLoopControlPoints(f,g,d):sigma.utils.getQuadraticControlPoint(f,g,y,a);if(!i)switch(s){case"source":i=t.color||u;break;case"target":i=e.color||u;break;default:i=c}r.strokeStyle=i,r.lineWidth=n,r.beginPath(),r.moveTo(f,g),t.id===e.id?r.bezierCurveTo(x.x1,x.y1,x.x2,x.y2,y,a):r.quadraticCurveTo(x.x,x.y,y,a),r.stroke(),null==o.sourceDotColor&&null==o.targetDotColor||(l=o.dotOffset||3,s=o.dotSize||1,s*=n,l*=d,null!=o.sourceDotColor&&C(r,f,g,x,y,a,l,s,o.sourceDotColor),null!=o.targetDotColor&&C(r,y,a,x,f,g,l,s,o.targetDotColor))}}(),function(){"use strict";function M(o,t,e,r,a,i,l,n,s){o.beginPath(),o.fillStyle=s;l=function(o,t,e,r,a,i,l){for(var n=0,s=1e3,u=0;u<1;u+=.001){var c=d(o,t,e,r,a,i,u),c=function(o,t,e,r){return Math.sqrt((e-o)*(e-o)+(r-t)*(r-t))}(o,t,c.x,c.y);Math.abs(c-l)<s&&(s=Math.abs(c-l),n=u)}return d(o,t,e,r,a,i,n)}(t,e,r.x,r.y,a,i,l);o.arc(l.x,l.y,3*n,0,2*Math.PI,!1),o.fill()}function n(o,t,e,r){var a=1-o;return a*a*t+2*a*o*e+o*o*r}function d(o,t,e,r,a,i,l){return{x:n(l,o,e,a),y:n(l,t,r,i)}}sigma.utils.pkg("sigma.canvas.edges"),sigma.canvas.edges.dotCurvedArrow=function(o,t,e,r,a){var i,l,n,s=o.color,u=a("prefix")||"",c=a("edgeColor"),d=a("defaultNodeColor"),f=a("defaultEdgeColor"),g=o[u+"size"]||1,y=o.count||0,x=e[u+"size"],C=t[u+"x"],h=t[u+"y"],v=e[u+"x"],u=e[u+"y"],a=Math.max(2.5*g,a("minArrowSize")),b=t.id===e.id?sigma.utils.getSelfLoopControlPoints(C,h,x,y):sigma.utils.getQuadraticControlPoint(C,h,v,u,y),m=t.id===e.id?(m=Math.sqrt(Math.pow(v-b.x1,2)+Math.pow(u-b.y1,2)),i=b.x1+(v-b.x1)*(m-a-x)/m,n=b.y1+(u-b.y1)*(m-a-x)/m,l=(v-b.x1)*a/m,(u-b.y1)*a/m):(m=Math.sqrt(Math.pow(v-b.x,2)+Math.pow(u-b.y,2)),i=b.x+(v-b.x)*(m-a-x)/m,n=b.y+(u-b.y)*(m-a-x)/m,l=(v-b.x)*a/m,(u-b.y)*a/m);if(!s)switch(c){case"source":s=t.color||d;break;case"target":s=e.color||d;break;default:s=f}r.strokeStyle=s,r.lineWidth=g,r.beginPath(),r.moveTo(C,h),t.id===e.id?r.bezierCurveTo(b.x2,b.y2,b.x1,b.y1,i,n):r.quadraticCurveTo(b.x,b.y,i,n),r.stroke(),r.fillStyle=s,r.beginPath(),r.moveTo(i+l,n+m),r.lineTo(i+.6*m,n-.6*l),r.lineTo(i-.6*m,n+.6*l),r.lineTo(i+l,n+m),r.closePath(),r.fill(),null==o.sourceDotColor&&null==o.targetDotColor||(n=o.dotOffset||3,m=o.dotSize||1,m*=g,n*=x,null!=o.sourceDotColor&&M(r,C,h,b,v,u,n,m,o.sourceDotColor),null!=o.targetDotColor&&M(r,v,u,b,C,h,n,m,o.targetDotColor))}}();